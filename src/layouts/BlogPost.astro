---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import ViewTransitions from "astro/components/ViewTransitions.astro";

type Props = CollectionEntry<"blog">["data"] & {
  heroWidth?: number;
  heroHeight?: number;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  heroWidth = 1020,
  heroHeight = 520,
} = Astro.props;

const articleSchema = {
  "@context": "https://schema.org",
  "@type": "Article",
  headline: title,
  description: description,
  image: heroImage ? new URL(heroImage, Astro.site).toString() : undefined,
  author: {
    "@type": "Person",
    name: "Gabriel Caiana",
    url: Astro.site?.toString(),
  },
  publisher: {
    "@type": "Person",
    name: "Gabriel Caiana",
    logo: {
      "@type": "ImageObject",
      url: new URL("/favicon.png", Astro.site).toString(),
    },
  },
  datePublished: pubDate.toISOString(),
  dateModified: updatedDate?.toISOString() || pubDate.toISOString(),
  mainEntityOfPage: {
    "@type": "WebPage",
    "@id": Astro.url.toString(),
  },
};
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(articleSchema)}
    />
    <ViewTransitions />
    <style>
      main {
        width: calc(100% - 2em);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 2em);
        margin: auto;
        padding: 1em;
        color: var(--text);
      }
      .title {
        margin-bottom: 1em;
        padding: 1em 0;
        text-align: center;
        line-height: 1;
      }
      .title h1 {
        margin: 0 0 0.5em 0;
        color: var(--text-heading);
      }
      .date {
        margin-bottom: 0.5em;
        color: var(--text);
      }
      .last-updated-on {
        font-style: italic;
      }
      hr {
        border: none;
        border-top: 1px solid rgba(var(--gray), 0.2);
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img
                width={heroWidth}
                height={heroHeight}
                src={heroImage}
                alt="imagem principal do site"
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
            <hr />
          </div>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
